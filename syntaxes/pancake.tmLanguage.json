{
	"scopeName": "source.pancake",
	"patterns": [
	  {
		"include": "#comments"
	  },
	  {
		"include": "#keywords"
	  },
	  {
		"include": "#functions"
	  },
	  {
		"include": "#variables"
	  },
	  {
		"include": "#operators"
	  },
	  {
		"include": "#constants"
	  },
	  {
		"include": "#strings"
	  }
	],
	"repository": {
	  "comments": {
		"patterns": [
		  {
			"name": "comment.line.double-slash.pancake",
			"match": "//.*"
		  },
		  {
			"name": "comment.block.pancake",
			"begin": "/\\*",
			"end": "\\*/"
		  }
		]
	  },
	  "keywords": {
		"patterns": [
		  {
			"name": "keyword.control.pancake",
			"match": "\\b(skip|stw|st8|lds|ldw|ld8|if|else|while|break|continue|raise|return|tick|var|in|with|handle|true|false|fun)\\b"
		  }
		]
	  },
	  "functions": {
		"patterns": [
		  {
			"name": "entity.name.function.pancake",
			"match": "\\b([a-zA-Z_]\\w*)(?=\\s*\\()"
		  },
		  {
			"name": "support.function.pancake",
			"match": "@\\b([a-zA-Z_]\\w*)\\b"
		  }
		]
	  },
	  "variables": {
		"patterns": [
		  {
			"name": "variable.other.pancake",
			"match": "\\b([a-zA-Z_]\\w*)\\b"
		  }
		]
	  },
	  "operators": {
		"patterns": [
		  {
			"name": "keyword.operator.assignment.pancake",
			"match": "="
		  },
		  {
			"name": "keyword.operator.arithmetic.pancake",
			"match": "[+\\-*/%]"
		  }
		]
	  },
	  "constants": {
		"patterns": [
		  {
			"name": "constant.numeric.pancake",
			"match": "\\b\\d+\\b"
		  },
		  {
			"name": "constant.language.pancake",
			"match": "\\b(@base)\\b"
		  }
		]
	  },
	  "strings": {
		"name": "string.quoted.double.pancake",
		"begin": "\"",
		"end": "\"",
		"patterns": [
		  {
			"name": "constant.character.escape.pancake",
			"match": "\\\\."
		  }
		]
	  }
	}
}