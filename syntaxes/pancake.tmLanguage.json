{
	"scopeName": "source.pancake",
	"patterns": [
	  {
		"include": "#comments"
	  },
	  {
		"include": "#base"
	  },
	  {
		"include": "#biw"
	  },
	  {
		"include": "#keywords"
	  },
	  {
		"include": "#functions"
	  },
	  {
		"include": "#variables"
	  },
	  {
		"include": "#operators"
	  },
	  {
		"include": "#shapes"
	  },
	  {
		"include": "#shape_numbers"
	  },
	  {
		"include": "#constants"
	  },
	  {
		"include": "#strings"
	  },
	  {
		"name": "meta.specification.block.pancake",
		"begin": "/@",
		"end": "@/",
		"beginCaptures": {
		  "0": { "name": "punctuation.definition.specification.begin.pancake" }
		},
		"endCaptures": {
		  "0": { "name": "punctuation.definition.specification.end.pancake" }
		},
		"patterns": [
		  {
			"include": "$self"
		  }
		]
	  }
	],
	"repository": {
	  "comments": {
		"patterns": [
		  {
			"name": "comment.line.double-slash.pancake",
			"match": "//.*"
		  },
		  {
			"name": "comment.block.pancake",
			"begin": "/\\*",
			"end": "\\*/"
		  }
		]
	  },
	  "base": {
		"name": "constant.language.base.pancake",
		"match": "@base\\b"
	  },
	  "biw": {
		"name": "constant.language.biw.pancake",
		"match": "@biw\\b"
	  },
	  "keywords": {
		"patterns": [
		  {
			"name": "keyword.control.pancake",
			"match": "\\b(skip|!stw|!ldw|!st8|!ld8|!st32|!ld32|st|st8|lds|ld8|if|else|while|break|continue|raise|return|tick|in|with|handle)\\b"
		  },
		  {
			"name": "keyword.function.pancake",
			"match": "\\b(fun)\\b"
		  },
		  {
			"name": "keyword.variable.pancake",
			"match": "\\b(var)\\b"
		  },
		  {
			"name": "constant.language.boolean.pancake",
			"match": "\\b(true|false)\\b"
		  }
		]
	  },
	  "functions": {
		"patterns": [
		  {
			"name": "entity.name.function.pancake",
			"match": "\\b([a-zA-Z_]\\w*)(?=\\s*\\()"
		  }
		]
	  },
	  "variables": {
		"patterns": [
		  {
			"name": "variable.other.pancake",
			"match": "\\b([a-zA-Z_]\\w*)\\b"
		  }
		]
	  },
	  "operators": {
		"patterns": [
		  {
			"name": "keyword.operator.assignment.pancake",
			"match": "="
		  },
		  {
			"name": "keyword.operator.arithmetic.pancake",
			"match": "[+\\-*]"
		  },
		  {
			"name": "keyword.operator.logical.pancake",
			"match": "(&&|\\|\\||!)"
		  },
		  {
			"name": "keyword.operator.bitwise.pancake",
			"match": "(&|\\||\\^|~|<<|>>)"
		  }
		]
	  },
	  "shapes": {
		"name": "meta.shape.pancake",
		"begin": "\\{\\s*(?=\\d|\\{)",
		"end": "\\}",
		"patterns": [
		  {
			"include": "#shape_numbers"
		  },
		  {
			"include": "#shapes"
		  }
		]
	  },
	  "shape_numbers": {
		"name": "constant.numeric.shape.pancake",
		"match": "\\b\\d+\\b(?=\\s*[,}])"
	  },
	  "constants": {
		"patterns": [
		  {
			"name": "constant.numeric.pancake",
			"match": "\\b\\d+\\b"
		  }
		]
	  },
	  "strings": {
		"name": "string.quoted.double.pancake",
		"begin": "\"",
		"end": "\"",
		"patterns": [
		  {
			"name": "constant.character.escape.pancake",
			"match": "\\\\."
		  }
		]
	  }
	}
}